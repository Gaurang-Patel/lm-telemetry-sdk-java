plugins {
    id 'java'
    id 'maven-publish'
    id 'java-library'
    id 'jacoco'
}
apply plugin: 'java'
apply from: "${rootProject.projectDir}/gradle/spotless.gradle"
repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '5.0.0-alpha.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    api("io.opentelemetry.contrib:opentelemetry-aws-resources:1.20.1-alpha"){
        exclude group: 'io.opentelemetry', module: 'opentelemetry-sdk'
        exclude group: 'io.opentelemetry', module: 'opentelemetry-api'
    }
    api("io.opentelemetry:opentelemetry-semconv:${versions.opentelemetryAlpha}")
    implementation (group: "io.opentelemetry", name: "opentelemetry-sdk-extension-autoconfigure", version: "${versions.opentelemetryAlpha}")
    implementation("com.fasterxml.jackson.core:jackson-core:2.14.1")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.14.1")
    testImplementation 'com.linecorp.armeria:armeria-junit5:1.11.0'
    implementation 'com.amazonaws:aws-java-sdk-sts:1.12.148'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha0'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha0'

    implementation 'org.json:json:20090211'
    testImplementation 'com.linecorp.armeria:armeria-junit5:1.6.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.9'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation group: 'org.junit-pioneer', name: 'junit-pioneer', version: '0.7.0'
}

task jarSigner {
    doLast {
        def passwd = System.getenv("PASSWORD")
        def app_alias = System.getenv("ALIAS")
        def pfx_file = System.getenv("FILE")
        def storetype =  System.getenv("STORETYPE")

        def exec_line = "jarsigner -storetype " + storetype + " -keystore " + pfx_file + " -tsa http://timestamp.comodoca.com/?td=sha256 -storepass " +
                passwd + " -keypass "+ passwd + " " + jar.archivePath + " " + app_alias

        def output=exec_line.execute()
        output.waitFor()

        println "Exit value: ${output.exitValue()}"
        println "Output: ${output.text}"
    }
}
jar.finalizedBy(jarSigner)

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'otel-resource'
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/logicmonitor/lm-telemetry-sdk-java"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

test {
    useJUnitPlatform()
}

